{
  "version": 3,
  "sources": ["../../src/pages/mails.ts"],
  "sourcesContent": ["import \"../utils/requireLogin\";\nimport { checkTokenRefresh } from \"../utils/tokenRefresh\";\nimport \"./mails.scss\";\nimport { displayFiles, initShow } from \"./modules/displayFiles\";\nimport { getMailBody, getMailDateElement, sort } from \"./modules/mailUtils\";\nimport { Mail } from \"./modules/types\";\n\ncheckTokenRefresh();\nconst mailsContainer = qs(\".mails-container\");\n\nasync function main() {\n    const res = await fetch(\"/api/files/mails\").then(res => res.json()) as Mail[];\n    // @ts-ignore\n    if (res.err) {\n        // @ts-ignore\n        mailsContainer.innerHTML = `<p class=\"error-message\">${res.msg}</p>`;\n        return\n    }\n\n    if (res.length === 0) {\n        mailsContainer.innerHTML = `<p class=\"error-message\">No mails found.</p>`;\n        return;\n    }\n\n    mailsContainer.innerHTML = \"<ul>\" + sort(res).map(mail => {\n        return `\n            <li>\n                <h3>${mail.name}</h3>\n                ${getMailDateElement(mail._id)}\n                ${getMailBody(mail.txt)}\n                <button class=\"show\" data-id=\"${mail._id}\">View Files</button>\n                <div class=\"files-container\" data-id=\"files-${mail._id}\"></div>\n            </li>\n        `\n    }).join(\"\") + \"</ul>\";\n\n    res.forEach(mail => {\n        displayFiles({\n            name: mail.name,\n            files: mail.files,\n            apiPath: \"/api/files\",\n            containerId: `files-${mail._id}`\n        });\n    });\n    initShow(mailsContainer);\n}\n\ntry {\n    main();\n} catch (error) {\n    console.error(\"Failed to load mails:\", error);\n    mailsContainer.innerHTML = `<p class=\"error-message\">Could not connect to the server.</p>`;\n}"],
  "mappings": "oLAOAA,EAAkB,EAClB,IAAMC,EAAiB,GAAG,kBAAkB,EAE5C,eAAeC,GAAO,CAClB,IAAMC,EAAM,MAAM,MAAM,kBAAkB,EAAE,KAAKA,GAAOA,EAAI,KAAK,CAAC,EAElE,GAAIA,EAAI,IAAK,CAETF,EAAe,UAAY,4BAA4BE,EAAI,GAAG,OAC9D,MACJ,CAEA,GAAIA,EAAI,SAAW,EAAG,CAClBF,EAAe,UAAY,+CAC3B,MACJ,CAEAA,EAAe,UAAY,OAASG,EAAKD,CAAG,EAAE,IAAIE,GACvC;AAAA;AAAA,sBAEOA,EAAK,IAAI;AAAA,kBACbC,EAAmBD,EAAK,GAAG,CAAC;AAAA,kBAC5BE,EAAYF,EAAK,GAAG,CAAC;AAAA,gDACSA,EAAK,GAAG;AAAA,8DACMA,EAAK,GAAG;AAAA;AAAA,SAGjE,EAAE,KAAK,EAAE,EAAI,QAEdF,EAAI,QAAQE,GAAQ,CAChBG,EAAa,CACT,KAAMH,EAAK,KACX,MAAOA,EAAK,MACZ,QAAS,aACT,YAAa,SAASA,EAAK,GAAG,EAClC,CAAC,CACL,CAAC,EACDI,EAASR,CAAc,CAC3B,CAnCeS,EAAAR,EAAA,QAqCf,GAAI,CACAA,EAAK,CACT,OAASS,EAAO,CACZ,QAAQ,MAAM,wBAAyBA,CAAK,EAC5CV,EAAe,UAAY,+DAC/B",
  "names": ["checkTokenRefresh", "mailsContainer", "main", "res", "sort", "mail", "getMailDateElement", "getMailBody", "displayFiles", "initShow", "__name", "error"]
}
