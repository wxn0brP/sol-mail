{
  "version": 3,
  "sources": ["../src/utils/cookies.ts", "../src/utils/tokenRefresh.ts"],
  "sourcesContent": ["export const cookies = document.cookie.split(\"; \").reduce((acc, cookie) => {\n    const [name, value] = cookie.split(\"=\");\n    acc[name] = value;\n    return acc;\n}, {} as Record<string, string>);", "let tokenExpiresAt: number = +localStorage.getItem(\"tokenExpiresAt\") || 0;\n\nexport async function refreshToken(next = true) {\n    const res = await fetch(\"/auth/refresh\", { method: \"POST\" });\n    if (res.ok) {\n        const { expiresAt } = await res.json();\n        localStorage.setItem(\"tokenExpiresAt\", expiresAt);\n        tokenExpiresAt = expiresAt;\n    }\n    else if (next) window.location.href = \"/page/login?next=\" + window.location.pathname;\n}\n\nexport function checkTokenRefresh(next = true) {\n    if (!tokenExpiresAt) return\n    const now = Date.now();\n    const eightyPercentOfLifetime = tokenExpiresAt - (tokenExpiresAt - now) * 0.2;\n    if (now > eightyPercentOfLifetime) {\n        refreshToken(next);\n    }\n}"],
  "mappings": "wCAAO,IAAMA,EAAU,SAAS,OAAO,MAAM,IAAI,EAAE,OAAO,CAACC,EAAKC,IAAW,CACvE,GAAM,CAACC,EAAMC,CAAK,EAAIF,EAAO,MAAM,GAAG,EACtC,OAAAD,EAAIE,CAAI,EAAIC,EACLH,CACX,EAAG,CAAC,CAA2B,ECJ/B,IAAII,EAAyB,CAAC,aAAa,QAAQ,gBAAgB,GAAK,EAExE,eAAsBC,EAAaC,EAAO,GAAM,CAC5C,IAAMC,EAAM,MAAM,MAAM,gBAAiB,CAAE,OAAQ,MAAO,CAAC,EAC3D,GAAIA,EAAI,GAAI,CACR,GAAM,CAAE,UAAAC,CAAU,EAAI,MAAMD,EAAI,KAAK,EACrC,aAAa,QAAQ,iBAAkBC,CAAS,EAChDJ,EAAiBI,CACrB,MACSF,IAAM,OAAO,SAAS,KAAO,oBAAsB,OAAO,SAAS,SAChF,CARsBG,EAAAJ,EAAA,gBAUf,SAASK,EAAkBJ,EAAO,GAAM,CAC3C,GAAI,CAACF,EAAgB,OACrB,IAAMO,EAAM,KAAK,IAAI,EACfC,EAA0BR,GAAkBA,EAAiBO,GAAO,GACtEA,EAAMC,GACNP,EAAaC,CAAI,CAEzB,CAPgBG,EAAAC,EAAA",
  "names": ["cookies", "acc", "cookie", "name", "value", "tokenExpiresAt", "refreshToken", "next", "res", "expiresAt", "__name", "checkTokenRefresh", "now", "eightyPercentOfLifetime"]
}
